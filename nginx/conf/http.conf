# Default TLS redirect
server {
    listen       80;
    server_name  *.tendollarbond.com tendollarbond.com;
    return       301 https://$host$request_uri;
}

# Default GoonAuth redirect
server {
    listen 443 ssl http2;
    server_name tendollarbond.com www.tendollarbond.com;
    return 301 https://auth.tendollarbond.com$request_uri;
}

# GoonAuth
server {
    listen 443 ssl http2 default_server;
    server_name auth.tendollarbond.com;

    location / {
        proxy_pass http://goon-auth:4000/;
    }
}

# GoonSwarm forums
server {
    listen 443 ssl http2;
    server_name forums.tendollarbond.com;

    location / {
    proxy_pass http://forum/;
    }
}

# Kaiwa
server {
    listen 443 ssl http2;
    server_name chat.tendollarbond.com;

    location / {
        proxy_pass http://kaiwa:8000/;
    }
}

# Rocket.chat
server {
    listen 443 ssl http2;
    server_name rocket.tendollarbond.com;

    # Separate SSL cert for rocket
    ssl_certificate /etc/nginx/ssl/rocket.tendollarbond.com/tls.crt;
    ssl_certificate_key /etc/nginx/ssl/rocket.tendollarbond.com/tls.key;

    location / {
        proxy_pass http://rocket-chat:3000/;
    }
}

# Kubernetes admin interface
server {
    listen 443 ssl http2;
    server_name admin.k8s.tendollarbond.com;

    # Separate SSL cert for k8s stuff
    ssl_certificate /etc/nginx/ssl/k8s.tendollarbond.com/tls.crt;
    ssl_certificate_key /etc/nginx/ssl/k8s.tendollarbond.com/tls.key;

    location / {
        proxy_pass https://k8s.svc.k8s.tendollarbond.com/;
        # Kubernetes dashboard will not have a valid cert
        proxy_ssl_verify off;
    }
}

# Recon tool
server {
    listen 443 ssl http2;
    server_name recon.tendollarbond.com;

    location / {
        auth_request /auth_proxy;
        error_page 401 =200 /login;

        proxy_set_header Authorization "Basic BETYOUWANNAKNOW";

        proxy_pass https://eve.rmk2.org/recon/;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # Auth setup
    location /login {
        proxy_pass http://goon-auth:4000/login;
        proxy_set_header X-Target $request_uri;
    }

    location = /auth_proxy {
        internal;
        proxy_pass http://goon-auth:4000/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-length "";
        proxy_set_header X-Access-Group "recon";

        # Cache authentication results for 5 minutes
        proxy_ignore_headers Set-Cookie;
        proxy_cache auth_cache;
        proxy_cache_valid 200 403 5m;
        proxy_cache_key "$host$request_uri $cookie__goon_auth_key";
    }
}
